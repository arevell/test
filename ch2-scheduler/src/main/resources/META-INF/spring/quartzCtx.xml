<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
 
 	<context:annotation-config />	
    <context:component-scan base-package="com.ttc.ch2.scheduler.service" />
 
 	<!-- <util:properties id="schedulerPropertis"  location="classpath:/META-INF/spring/quartz.properties" /> --> 
 
 	 <bean name="DepartureSynchronizeJob" class="org.springframework.scheduling.quartz.JobDetailBean" scope="prototype">
  		  <property name="jobClass" value="com.ttc.ch2.scheduler.jobs.departuresynch.DepartureSynchronizeJob"/>
  		  <!-- <property name="name" value="DepartureSynchronizeJob"/> -->
  		  <property name="jobDataAsMap">
		    <map>

		    </map>
		  </property>
	</bean>
	
	<bean name="DepartureExtendedSynchronizeJob" class="org.springframework.scheduling.quartz.JobDetailBean" scope="prototype">
  		  <property name="jobClass" value="com.ttc.ch2.scheduler.jobs.departuresynch.DepartureExtendedSynchronizeJob"/>
  		  <property name="jobDataAsMap">
		    <map>

		    </map>
		  </property>
	</bean>
	 
 	 <bean name="UploadTourInfoJob" class="org.springframework.scheduling.quartz.JobDetailBean" scope="prototype">
  		  <property name="jobClass" value="com.ttc.ch2.scheduler.jobs.upload.UploadTourInfoJob"/>
  		  <property name="jobDataAsMap">
		    <map>

		    </map>
		  </property>
	</bean> 
	
 	 <bean name="AuditPurgeJob" class="org.springframework.scheduling.quartz.JobDetailBean" scope="prototype">
  		  <property name="jobClass" value="com.ttc.ch2.scheduler.jobs.audit.AuditPurgeJob"/>
  		  <property name="jobDataAsMap">
		    <map>
                <entry key="auditMaturityDays" value="90" />
                <entry key="auditRecordsLimit" value="10000000" />
                <entry key="metricsMaturityDays" value="90" />
                <entry key="metricsRecordsLimit" value="10000000" />
		    </map>
		  </property>
	</bean> 
	
	
 	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
 	  <property name="schedulerName" value="${scheduler.name}"/>
 	  <property name="autoStartup" value="${scheduler.autostart}"/>
 	  <property name="dataSource" ref="dataSource"/>
 	  <property name="startupDelay" value="180" />
 	   
	  <property name="quartzProperties">
        <map>          
        <!--  Configure Main Scheduler Properties  -->  
            <entry key="org.quartz.scheduler.instanceName" value="${scheduler.name}" />
            <entry key="org.quartz.scheduler.instanceId" value="${scheduler.id}" />                          
            <entry key="org.quartz.scheduler.rmi.export" value="false" />            
            <entry key="org.quartz.scheduler.rmi.proxy" value="false" />         
            <entry key="org.quartz.scheduler.skipUpdateCheck" value="true" />         
            
           <!--  Configure ThreadPool   -->
            <entry key="org.quartz.threadPool.class" value="org.quartz.simpl.SimpleThreadPool" />
            <entry key="org.quartz.threadPool.threadCount" value="4" />
            <entry key="org.quartz.threadPool.threadPriority" value="5" />
            
           <!--   Configure JobStore   -->           
           <entry key="org.quartz.jobStore.misfireThreshold" value="60000" /> 
           <entry key="org.quartz.jobStore.class" value="org.quartz.impl.jdbcjobstore.JobStoreTX" /> 
           <entry key="org.quartz.jobStore.driverDelegateClass" value="org.quartz.impl.jdbcjobstore.StdJDBCDelegate" /> 
<!--            <entry key="org.quartz.jobStore.driverDelegateClass" value="org.quartz.impl.jdbcjobstore.oracle.OracleDelegate" />  -->
           <entry key="org.quartz.jobStore.useProperties" value="false" /> 
<!--           <entry key="org.quartz.jobStore.dataSource" value="myDS" /> --> 
           <entry key="org.quartz.jobStore.tablePrefix" value="QRTZ_" /> 
           <entry key="org.quartz.jobStore.isClustered" value="true" /> 
           <!-- <entry key="org.quartz.jobStore.clusterCheckinInterval" value="20000" /> --> 
           <entry key="org.quartz.jobStore.clusterCheckinInterval" value="5000" /> 
           
           <!--  Configure Datasources -->
<!--           <entry key="org.quartz.dataSource.myDS.driver" value="${datasource.driver}" />
           <entry key="org.quartz.dataSource.myDS.URL" value="${datasource.url}" />
           <entry key="org.quartz.dataSource.myDS.user" value="${datasource.user}" />
           <entry key="org.quartz.dataSource.myDS.password" value="${datasource.password}" />
           <entry key="org.quartz.dataSource.myDS.maxConnection" value="5" />
           <entry key="org.quartz.dataSource.myDS.validationQuery" value="select 0 from dual" /> -->               
        </map> 
    </property>
	</bean>
</beans>